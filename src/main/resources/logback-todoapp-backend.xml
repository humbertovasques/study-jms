<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <property name="HOME_LOG" value="/u01/app/projetos/todoapp/backend/log"/>
    <property name="APP_PLAIN_LOG" value="todoapp-backend-aplicacao-plain"/>
    <property name="APP_JSON_LOG" value="todoapp-backend-aplicacao"/>
    <property name="INFRA_PLAIN_LOG" value="todoapp-backend-infra-plain"/>
    <property name="INFRA_JSON_LOG" value="todoapp-backend-infra"/>
    <property name="PERFORMANCE_PLAIN_LOG" value="todoapp-backend-performance-plain"/>
    <property name="PERFORMANCE_JSON_LOG" value="todoapp-backend-performance"/>
    <property name="AUDIT_PLAIN_LOG" value="todoapp-backend-audit-plain"/>
    <property name="AUDIT_JSON_LOG" value="todoapp-backend-audit"/>

    <property name="STE_EXCLUSIONS"
              value="\$\$FastClassByCGLIB\$\$,\$\$EnhancerBySpringCGLIB\$\$,^sun\.reflect\..*\.invoke,^com\.sun\.,^sun\.net\.,^net\.sf\.cglib\.proxy\.MethodProxy\.invoke,^org\.springframework\.cglib\.,^org\.springframework\.transaction\.,^org\.springframework\.validation\.,^org\.springframework\.app\.,^org\.springframework\.aop\.,^java\.lang\.reflect\.Method\.invoke,^org\.springframework\.ws\..*\.invoke,^org\.springframework\.ws\.transport\.,^org\.springframework\.ws\.soap\.saaj\.SaajSoapMessage\.,^org\.springframework\.ws\.client\.core\.WebServiceTemplate\.,^org\.springframework\.web\.filter\.,^org\.apache\.tomcat\.,^org\.apache\.catalina\.,^org\.apache\.coyote\.,^java\.util\.concurrent\.ThreadPoolExecutor\.runWorker,^java\.lang\.Thread\.run$"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <Pattern>
                [%highlight(%-5level)] [%green(%d{dd-MM-yyyy HH:mm:ss.SSS})] [%blue(%t)] [%yellow(%c.%M:%L)] %msg%n%throwable
            </Pattern>
        </layout>
    </appender>

    <appender name="appPlainLogger"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME_LOG}/${APP_PLAIN_LOG}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
                %-5p [%d] [%t] [%c.%M:%L] %m%n
            </Pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${HOME_LOG}/archive/%d{yyyy/MM/dd}/${APP_PLAIN_LOG}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="appJsonLogger"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME_LOG}/${APP_JSON_LOG}.log</file>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <jsonGeneratorDecorator
                class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>
            <provider class="net.logstash.logback.composite.loggingevent.ArgumentsJsonProvider"/>
            <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                <rootCauseFirst>true</rootCauseFirst>
                <inlineHash>false</inlineHash>
                <exclusions>${STE_EXCLUSIONS}</exclusions>
            </throwableConverter>
            <provider class="net.logstash.logback.composite.loggingevent.StackHashJsonProvider">
                <exclusions>${STE_EXCLUSIONS}</exclusions>
            </provider>
            <includeCallerData>true</includeCallerData>
            <fieldNames>
                <callerClass>class</callerClass>
                <callerMethod>method</callerMethod>
                <callerFile>file</callerFile>
                <callerLine>line_number</callerLine>
            </fieldNames>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${HOME_LOG}/archive/%d{yyyy/MM/dd}/${APP_JSON_LOG}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="infraPlainLogger"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME_LOG}/${INFRA_PLAIN_LOG}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
                %-5p [%d] [%t] [%c.%M:%L] %m%n
            </Pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${HOME_LOG}/archive/%d{yyyy/MM/dd}/${INFRA_PLAIN_LOG}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="infraJsonLogger"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME_LOG}/${INFRA_JSON_LOG}.log</file>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <jsonGeneratorDecorator
                class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>
            <provider class="net.logstash.logback.composite.loggingevent.ArgumentsJsonProvider"/>
            <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                <maxDepthPerThrowable>30</maxDepthPerThrowable>
                <maxLength>2048</maxLength>
                <rootCauseFirst>true</rootCauseFirst>
                <inlineHash>false</inlineHash>
                <exclusions>${STE_EXCLUSIONS}</exclusions>
            </throwableConverter>
            <provider class="net.logstash.logback.composite.loggingevent.StackHashJsonProvider">
                <exclusions>${STE_EXCLUSIONS}</exclusions>
            </provider>
            <includeCallerData>true</includeCallerData>
            <fieldNames>
                <callerClass>class</callerClass>
                <callerMethod>method</callerMethod>
                <callerFile>file</callerFile>
                <callerLine>line_number</callerLine>
            </fieldNames>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${HOME_LOG}/archive/%d{yyyy/MM/dd}/${INFRA_JSON_LOG}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="performancePlainLogger"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME_LOG}/${PERFORMANCE_PLAIN_LOG}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
                %-5p [%d] [%t] [%c.%M:%L] %m%n
            </Pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${HOME_LOG}/archive/%d{yyyy/MM/dd}/${PERFORMANCE_PLAIN_LOG}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="performanceJsonLogger"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME_LOG}/${PERFORMANCE_JSON_LOG}.log</file>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <jsonGeneratorDecorator
                class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>
            <provider class="net.logstash.logback.composite.loggingevent.ArgumentsJsonProvider"/>
            <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                <maxDepthPerThrowable>30</maxDepthPerThrowable>
                <maxLength>2048</maxLength>
                <shortenedClassNameLength>20</shortenedClassNameLength>
                <rootCauseFirst>true</rootCauseFirst>
                <inlineHash>false</inlineHash>
                <exclusions>${STE_EXCLUSIONS}</exclusions>
            </throwableConverter>
            <provider class="net.logstash.logback.composite.loggingevent.StackHashJsonProvider">
                <exclusions>${STE_EXCLUSIONS}</exclusions>
            </provider>
            <includeCallerData>true</includeCallerData>
            <fieldNames>
                <callerClass>class</callerClass>
                <callerMethod>method</callerMethod>
                <callerFile>file</callerFile>
                <callerLine>line_number</callerLine>
            </fieldNames>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${HOME_LOG}/archive/%d{yyyy/MM/dd}/${PERFORMANCE_JSON_LOG}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="auditPlainLogger"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME_LOG}/${AUDIT_PLAIN_LOG}.log</file>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <Pattern>
                %-5p [%d] [%t] [%c.%M:%L] %m%n
            </Pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${HOME_LOG}/archive/%d{yyyy/MM/dd}/${AUDIT_PLAIN_LOG}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <appender name="auditJsonLogger"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${HOME_LOG}/${AUDIT_JSON_LOG}.log</file>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <jsonGeneratorDecorator
                class="net.logstash.logback.decorate.PrettyPrintingJsonGeneratorDecorator"/>
            <provider class="net.logstash.logback.composite.loggingevent.ArgumentsJsonProvider"/>
            <throwableConverter class="net.logstash.logback.stacktrace.ShortenedThrowableConverter">
                <maxDepthPerThrowable>30</maxDepthPerThrowable>
                <maxLength>2048</maxLength>
                <shortenedClassNameLength>20</shortenedClassNameLength>
                <rootCauseFirst>true</rootCauseFirst>
                <inlineHash>false</inlineHash>
                <exclusions>${STE_EXCLUSIONS}</exclusions>
            </throwableConverter>
            <provider class="net.logstash.logback.composite.loggingevent.StackHashJsonProvider">
                <exclusions>${STE_EXCLUSIONS}</exclusions>
            </provider>
            <includeCallerData>true</includeCallerData>
            <fieldNames>
                <callerClass>class</callerClass>
                <callerMethod>method</callerMethod>
                <callerFile>file</callerFile>
                <callerLine>line_number</callerLine>
            </fieldNames>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${HOME_LOG}/archive/%d{yyyy/MM/dd}/${AUDIT_JSON_LOG}-%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="infraPlainLogger"/>
        <appender-ref ref="infraJsonLogger"/>
    </root>

    <logger name="com.study.projetos.todoapp.backend" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="appPlainLogger"/>
        <appender-ref ref="appJsonLogger"/>
    </logger>

    <logger name="com.study.projetos.todoapp.backend.performance" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="performancePlainLogger"/>
        <appender-ref ref="performanceJsonLogger"/>
    </logger>

    <logger name="com.study.projetos.todoapp.backend.audit" level="DEBUG" additivity="false">
        <appender-ref ref="auditPlainLogger"/>
        <appender-ref ref="auditJsonLogger"/>
    </logger>

    <logger name="org.springframework" level="DEBUG" additivity="false">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="infraPlainLogger"/>
        <appender-ref ref="infraJsonLogger"/>
    </logger>

</configuration>
